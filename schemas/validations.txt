# Database Schema with Validations

Rule 1: All tables must define a PRIMARY KEY and it must be mentioned explicitaly.
Rule 2: Columns must have consistent data types.
Rule 3: Use of UNIQUE is not a replacement for PRIMARY KEY.
Rule 4: Foreign keys must reference valid primary keys.

## 1. Users Table

ALTER TABLE users
ADD CONSTRAINT chk_email_format CHECK (email REGEXP '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}$'),
ADD CONSTRAINT chk_username_length CHECK (LENGTH(username) BETWEEN 5 AND 50),
ADD CONSTRAINT chk_password_length CHECK (LENGTH(password_hash) >= 8),
ADD CONSTRAINT chk_dob_reasonable CHECK (date_of_birth < DATE_SUB(CURRENT_DATE, INTERVAL 13 YEAR));

## 2. Addresses Table

ALTER TABLE addresses
ADD CONSTRAINT chk_postal_code_format CHECK (
    (country = 'US' AND postal_code REGEXP '^[0-9]{5}(-[0-9]{4})?$') OR
    (country = 'CA' AND postal_code REGEXP '^[A-Za-z][0-9][A-Za-z] [0-9][A-Za-z][0-9]$') OR
    (country NOT IN ('US', 'CA'))
);

## 3. Products Table

ALTER TABLE products
ADD CONSTRAINT chk_price_positive CHECK (price > 0),
ADD CONSTRAINT chk_stock_non_negative CHECK (stock_quantity >= 0),
ADD CONSTRAINT chk_name_length CHECK (LENGTH(name) BETWEEN 3 AND 100);

## 4. Categories Table

ALTER TABLE categories
ADD CONSTRAINT chk_name_length CHECK (LENGTH(name) BETWEEN 2 AND 50),
ADD CONSTRAINT chk_no_self_reference CHECK (parent_category_id != category_id);

## 5. Orders Table

ALTER TABLE orders
ADD CONSTRAINT chk_total_amount_positive CHECK (total_amount > 0),
ADD CONSTRAINT chk_valid_status CHECK (status IN ('pending', 'processing', 'shipped', 'delivered', 'cancelled'));

## 6. Order_Items Table

ALTER TABLE order_items
ADD CONSTRAINT chk_quantity_positive CHECK (quantity > 0),
ADD CONSTRAINT chk_unit_price_positive CHECK (unit_price > 0),
ADD CONSTRAINT chk_subtotal_matches CHECK (subtotal = quantity * unit_price);

## 7. Payments Table

ALTER TABLE payments
ADD CONSTRAINT chk_amount_positive CHECK (amount > 0),
ADD CONSTRAINT chk_valid_payment_status CHECK (status IN ('pending', 'completed', 'failed', 'refunded')),
ADD CONSTRAINT chk_amount_not_exceed_order CHECK (
    amount <= (SELECT total_amount FROM orders WHERE order_id = payments.order_id)
);

## 8. Reviews Table

ALTER TABLE reviews
ADD CONSTRAINT chk_rating_range CHECK (rating BETWEEN 1 AND 5),
ADD CONSTRAINT chk_one_review_per_user_product UNIQUE (user_id, product_id);

## 9. Wishlist Table

-- Already has UNIQUE constraint on (user_id, product_id)

## 10. Product_Images Table

ALTER TABLE product_images
ADD CONSTRAINT chk_valid_url CHECK (image_url LIKE 'http%://%'),
ADD CONSTRAINT chk_only_one_primary CHECK (
    NOT is_primary OR (
        SELECT COUNT(*) FROM product_images 
        WHERE product_id = product_images.product_id AND is_primary = TRUE
    ) <= 1
);

## Additional Application-Level Validations

1. User Management:
   - Username: alphanumeric with optional underscores/hyphens (no spaces)
   - Password: minimum 8 chars, require at least 1 number and 1 special character
   - Email verification via confirmation email

2. Address Management:
   - Validate address components against known lists
   - Only one default address per user

3. Product Management:
   - Product name must be unique (case-insensitive)
   - Description minimum 20 characters

4. Order Processing:
   - Status transitions must follow business rules
   - Order date cannot be in the future

5. Reviews:
   - User must have purchased the product to review
   - Prevent HTML/JavaScript in comments

6. Wishlist:
   - Product must be active to be added
   - Maximum items per user (e.g., 100)

7. Images:
   - Validate image dimensions/aspect ratio
   - File size limit for uploads
   - Supported image formats validation